{"version":3,"sources":["webpack:///./src/components/entry.js","webpack:///./src/pages/index.js"],"names":["Entry","post","className","to","frontmatter","path","title","tags","map","tag","renderTag","url","key","sortByYear","posts","activeYear","list_of_posts","filter","edge","node","date","forEach","year","slice","push","id","length","val","Array","IndexPage","edges","data","allMdx","pageQuery"],"mappings":"mJAYeA,EAVD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACV,wBAAIC,UAAU,qBACV,wBAAIA,UAAU,qBACV,kBAAC,OAAD,CAAMC,GAAKF,EAAKG,YAAYC,KAAOH,UAAU,oBAAqBD,EAAKG,YAAYE,QAEvF,wBAAIJ,UAAU,iCACRD,EAAKG,YAAYG,KAAKC,KAAI,SAAAC,GAAG,OAAIC,EAAUD,SAMnDC,EAAY,SAACD,GACf,IAAIE,EAAG,UAAaF,EACpB,OACI,wBAAIP,UAAU,gBAAgBU,IAAKH,GAC/B,kBAAC,OAAD,CAAMN,GAAIQ,EAAKT,UAAU,sBAAuBO,K,YCX5D,SAASI,EAAWC,GAClB,IAAIC,EAAa,KACbC,EAAgB,GAWpB,OAVAF,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKf,YAAYgB,QAAMC,SAAQ,SAAAH,GACvD,IAAII,EAAOJ,EAAKC,KAAKf,YAAYgB,KAAKG,OAAO,GACzCD,GAAQP,GACVA,EAAaO,EACbN,EAAcQ,KAAK,wBAAIZ,IAAKG,EAAYb,UAAU,YAAYa,IAC9DC,EAAcQ,KAAK,CAAC,kBAAC,EAAD,CAAOZ,IAAKM,EAAKC,KAAKM,GAAIxB,KAAMiB,EAAKC,UAEzDH,EAAcA,EAAcU,OAAO,GAAGF,KAAK,kBAAC,EAAD,CAAOZ,IAAKM,EAAKC,KAAKM,GAAIxB,KAAMiB,EAAKC,WAG7EH,EAAcR,KAAI,SAAAmB,GACvB,OAAIA,aAAeC,MACV,4BAAKD,GAELA,KAxBb,0CA4CeE,UAdG,SAAC,GAIZ,IAFOC,EAER,EAHJC,KACEC,OAAUF,MAIZ,OADAjB,EAAWiB,GAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKxB,MAAM,SACVO,EAAWiB,KATlB,IAeaG,EAAS","file":"component---src-pages-index-js-f6b169de138e7cda977a.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nconst Entry = ({ post }) => (\r\n    <li className='blog-entry l-flex'>\r\n        <h3 className='blog-entry--title'>\r\n            <Link to={ post.frontmatter.path } className='blog-entry--link'>{ post.frontmatter.title }</Link>\r\n        </h3>\r\n        <ul className='blog-entry--categories l-flex'>\r\n            { post.frontmatter.tags.map(tag => renderTag(tag)) }\r\n        </ul>\r\n    </li>\r\n)\r\nexport default Entry\r\n\r\nconst renderTag = (tag) => {\r\n    let url = `/tags/#${tag}`\r\n    return (\r\n        <li className='category--tag' key={tag}>\r\n            <Link to={url} className='category--tag-link'>{ tag }</Link>\r\n        </li>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../templates/layout\"\r\nimport Entry from \"../components/entry\"\r\nimport SEO from \"../components/seo\"\r\n\r\nfunction sortByYear(posts) {\r\n  let activeYear = null;\r\n  let list_of_posts = [];\r\n  posts.filter(edge => edge.node.frontmatter.date).forEach(edge => {\r\n    let year = edge.node.frontmatter.date.slice(-4)\r\n    if (year != activeYear) {\r\n      activeYear = year;\r\n      list_of_posts.push(<h2 key={activeYear} className='m-header'>{activeYear}</h2>)\r\n      list_of_posts.push([<Entry key={edge.node.id} post={edge.node} />])\r\n    } else {\r\n      list_of_posts[list_of_posts.length-1].push(<Entry key={edge.node.id} post={edge.node} />)\r\n    }\r\n  })\r\n  return list_of_posts.map(val => {\r\n    if (val instanceof Array) {\r\n      return <ul>{val}</ul>\r\n    } else {\r\n      return val\r\n    }\r\n  })\r\n}\r\n\r\n\r\nconst IndexPage = ({\r\n  data: {\r\n    allMdx: { edges },\r\n  },\r\n}) => {\r\n  sortByYear(edges)\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      {sortByYear(edges)}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            title\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}